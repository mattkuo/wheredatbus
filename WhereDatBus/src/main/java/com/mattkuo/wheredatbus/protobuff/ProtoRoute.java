// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: protos/Route.proto
package com.mattkuo.wheredatbus.protobuff;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;

public final class ProtoRoute extends Message {

  public static final String DEFAULT_ROUTE_SHORT = "";
  public static final String DEFAULT_ROUTE_LONG = "";

  @ProtoField(tag = 1, type = STRING)
  public final String route_short;

  @ProtoField(tag = 2, type = STRING)
  public final String route_long;

  public ProtoRoute(String route_short, String route_long) {
    this.route_short = route_short;
    this.route_long = route_long;
  }

  private ProtoRoute(Builder builder) {
    this(builder.route_short, builder.route_long);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ProtoRoute)) return false;
    ProtoRoute o = (ProtoRoute) other;
    return equals(route_short, o.route_short)
        && equals(route_long, o.route_long);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = route_short != null ? route_short.hashCode() : 0;
      result = result * 37 + (route_long != null ? route_long.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ProtoRoute> {

    public String route_short;
    public String route_long;

    public Builder() {
    }

    public Builder(ProtoRoute message) {
      super(message);
      if (message == null) return;
      this.route_short = message.route_short;
      this.route_long = message.route_long;
    }

    public Builder route_short(String route_short) {
      this.route_short = route_short;
      return this;
    }

    public Builder route_long(String route_long) {
      this.route_long = route_long;
      return this;
    }

    @Override
    public ProtoRoute build() {
      return new ProtoRoute(this);
    }
  }
}
